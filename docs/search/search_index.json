{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Bienvenue sur PasDeNom \u00b6 But du projet : \u00b6 Le but du projet, est de pouvoir s\u00e9lectionner une cat\u00e9gorie et tag(s), puis faire une recherche d\u2019une room si elle n'est pas trouv\u00e9 elle automatiquement cr\u00e9e. Room Une room ou salon est un rassemblement de diff\u00e9rents outils : Tchat vocal Tchat Textuel Possibilit\u00e9 d\u2019avoir un flux video + partage d\u2019ecran Partage de fichiers plus ou moins gros l'objectif est d'avoir une limite assez \u00e9lev\u00e9e. ainsi que des outils selon la cat\u00e9gorie choisie. (Exemple : avec la cat\u00e9gorie \"Programmation\" ou peut avoir un \u00e9diteur en ligne, ou un outil de test d'api comme postman) Outils selon la cat\u00e9gorie (Programmation = \u00e9diteur en ligne ainsi que d\u2019autres outils par exemple de reverse Engineering) Possibilit\u00e9 de param\u00e9trer la room, par exemple en limitant le nombre de personne qui peuvent y acc\u00e9der. vous pouvez aussi, si vous le voulez inviter des amis \u00e0 la room. PasDeNom a pour objectif de vous aider \u00e0 faire de nouvelles rencontres avec des personnes qui pourraient avoir des int\u00e9r\u00eats communs. Typiquement, si vous vous sentez seul ou que vous avez besoin d\u2019aide ou m\u00eame que vous souhaitez vous faire des amis, vous pouvez cr\u00e9er une room et ainsi faire de nouvelles rencontres que vous pourrez rajouter en amis. Differentes parties du projet : \u00b6 API (Avec clef d\u2019authentification) en NodeJs + Express Js (Avec des modules c++ pour de gros traitement \u00e0 voir) Front React Js (JS) Base de donn\u00e9e (MySql / MariaDb) Documentation avec le module python mkdocs Librairie Dynamique de compression sans perte et de chiffrements des donn\u00e9es (c ou c++) Programme permettant de clean une partie de la base de donn\u00e9e si elle devient trop lourde, il aura pour but de d\u00e9placer ces donn\u00e9es dans un dossier archive qui sera chiffr\u00e9. Programme de recherche \u00e0 partir d\u2019une IP, permettant d\u2019avoir une localisation. (c++) voir RIPE ou des tiers fournissant une base de donn\u00e9es","title":"Accueil"},{"location":"#bienvenue-sur-pasdenom","text":"","title":"Bienvenue sur PasDeNom"},{"location":"#but-du-projet","text":"Le but du projet, est de pouvoir s\u00e9lectionner une cat\u00e9gorie et tag(s), puis faire une recherche d\u2019une room si elle n'est pas trouv\u00e9 elle automatiquement cr\u00e9e. Room Une room ou salon est un rassemblement de diff\u00e9rents outils : Tchat vocal Tchat Textuel Possibilit\u00e9 d\u2019avoir un flux video + partage d\u2019ecran Partage de fichiers plus ou moins gros l'objectif est d'avoir une limite assez \u00e9lev\u00e9e. ainsi que des outils selon la cat\u00e9gorie choisie. (Exemple : avec la cat\u00e9gorie \"Programmation\" ou peut avoir un \u00e9diteur en ligne, ou un outil de test d'api comme postman) Outils selon la cat\u00e9gorie (Programmation = \u00e9diteur en ligne ainsi que d\u2019autres outils par exemple de reverse Engineering) Possibilit\u00e9 de param\u00e9trer la room, par exemple en limitant le nombre de personne qui peuvent y acc\u00e9der. vous pouvez aussi, si vous le voulez inviter des amis \u00e0 la room. PasDeNom a pour objectif de vous aider \u00e0 faire de nouvelles rencontres avec des personnes qui pourraient avoir des int\u00e9r\u00eats communs. Typiquement, si vous vous sentez seul ou que vous avez besoin d\u2019aide ou m\u00eame que vous souhaitez vous faire des amis, vous pouvez cr\u00e9er une room et ainsi faire de nouvelles rencontres que vous pourrez rajouter en amis.","title":"But du projet :"},{"location":"#differentes-parties-du-projet","text":"API (Avec clef d\u2019authentification) en NodeJs + Express Js (Avec des modules c++ pour de gros traitement \u00e0 voir) Front React Js (JS) Base de donn\u00e9e (MySql / MariaDb) Documentation avec le module python mkdocs Librairie Dynamique de compression sans perte et de chiffrements des donn\u00e9es (c ou c++) Programme permettant de clean une partie de la base de donn\u00e9e si elle devient trop lourde, il aura pour but de d\u00e9placer ces donn\u00e9es dans un dossier archive qui sera chiffr\u00e9. Programme de recherche \u00e0 partir d\u2019une IP, permettant d\u2019avoir une localisation. (c++) voir RIPE ou des tiers fournissant une base de donn\u00e9es","title":"Differentes parties du projet :"},{"location":"dev/API/api/","text":"Definition de l'API L' api est une interface de communication entre le serveur et le client. Elle permet de faire le lien entre la base de donn\u00e9es et le client. Selon la route, l'api va effectuer un traitement sur les donn\u00e9es r\u00e9cup\u00e9r\u00e9. Pourquoi l'api ? Le choix d'une api est tr\u00e8s simple, elle permet de pouvoir faire plusieurs type de client qui communiquent avec le serveur. On peut ais\u00e9ment, gr\u00e2ce \u00e0 des requ\u00eates sur l'api, r\u00e9cup\u00e9rer des donn\u00e9es, et les r\u00e9utiliser. Routes Account - /PasDeNom/signup (Cr\u00e9ation d'un compte) - POST - Param\u00e8tres: - username: string - password: string - email: string - Retour: - status: string - message: string - /PasDeNom/verify (V\u00e9rification d'un compte et connection) - POST - Param\u00e8tres: - token: string - Retour: - status: string - message: string - token: string - /PasDeNom/login (Connection) - POST - Param\u00e8tres: - username: string - password: string - Retour: - status: string - message: string - token: string User - /PasDeNom/user/me (Informations de l'utilisateur) - GET - Param\u00e8tres Header: - token: string - Retour: - status: string - message: string - user: object - PUT - Param\u00e8tres Header: - token: string - Param\u00e8tres: - username: string - password: string - email: string - Retour: - status: string - message: string - user: object - /PasDeNom/user/me/logo (Logo de l'utilisateur) - GET - Param\u00e8tres Header: - token: string - Param\u00e8tre: - uuid_user: string - Retour: - status: string - message: string - user_logo: array[object] - POST - Param\u00e8tres Header: - token: string - Param\u00e8tres: - uuid_user: string - logo: string - Retour: - status: string - message: string - PUT - Param\u00e8tres Header: - token: string - Param\u00e8tres: - uuid_user: string - ?user_logo_uuid_delete: boolean - Retour: - status: string - message: string - /PasDeNom/user/user-friend (Liste des amis) - GET - Param\u00e8tres Header: - token: string - Param\u00e8tre: - uuid_user: string - ?user_friend_uuid: string - Retour: - status: string - message: string - list user: array[object] - POST - Param\u00e8tres Header: - token: string - Param\u00e8tre: - uuid_user: string - uuid_user_friend: string - Retour: - status: string - message: string - DELETE - Param\u00e8tres Header: - token: string - Param\u00e8tre: - uuid_user: string - uuid_user_friend: string - Retour: - status: string - message: string Categories and Tag - /PasDeNom/categorie (Categories) - GET - Param\u00e8tre Header: - token: string - Retour: - status: string - message: string - categories: array[object] - /PasDeNom/tag (Tags) - GET - Param\u00e8tre Header: - token: string - Retour: - status: string - message: string - tags: array[object] Room - /PasDeNom/room (Room) - POST (Cr\u00e9ation) - Param\u00e8tre Header : - token: string - Param\u00e8tre : - uuid_user: string - categorie_uuid: string - tag_uuid: string - Retour : - status: string - message: string - GET - Param\u00e8tre Header : - token: string - Param\u00e8tre : - ?uuid_user: string - ?categorie_uuid: string - ?tag_uuid: string - Retour : - status: string - message: string - room: object - PUT - Param\u00e8tre Header : - token: string - Param\u00e8tre : - room_uuid: string - Retour : - status: string - message: string - /PasDeNom/room/users (Room User) - GET - Param\u00e8tre Header : - token: string - Param\u00e8tre : - room_uuid: string - ?uuid_user: string - Retour : - status: string - message: string - users: array[object] - POST - Param\u00e8tre Header : - token: string - Param\u00e8tre : - room_uuid: string - uuid_user: string - is_room_master: boolean - Retour : - status: string - message: string - /PasDeNom/room/message (Tchat de la room) - POST - Param\u00e8tre Header : - token : string - Param\u00e8tre : - room_uuid : string - user_uuid : string - has_files : string - file: string - message : string - Retour : - status : string - message : string - GET - Param\u00e8tre Header : - token : string - Param\u00e8tre : - room_uuid - Retour: - status : string - message : string - tchat : array[object] - POST - Param\u00e8tre Header : - token : string - Param\u00e8tre : - room_uuid : string - user_uuid : string - message_uuid : string - /PasDeNom/room/files (Liste des fichiers d'une room) - GET - Param\u00e8tre Header : - token: string - Param\u00e8tre : - room_uuid: string - ?room_message_uuid: string - Retour : - status: string - message: string - files: array[object] - /PasDeNom/room/categories (Liste des categories d'une room) - GET - Param\u00e8tre Header : - token : string - Param\u00e8tre : - room_uuid : string - Retour : - status : string - message : string - categories : array[object] - /PasDeNom/room/tags (Liste des tags d'une room) - GET - Param\u00e8tre Header : - token : string - Param\u00e8tre : - room_uuid : string - Retour : - status : string - message : string - tags : array[object] - /PasDeNom/room/report (Signaler un utilisateur) - POST - Param\u00e8tre Header : - token : string - Param\u00e8tre : - user_send_report_uuid : string - user_reported_uuid : string - reason : string - Retour : - status : string - message : string Admin - /PasDeNom/admin/user (User) - GET - Param\u00e8tre Header: - token: string - mac_address: string - Param\u00e8tre: - ?uuid_user: string - Retour: - status: string - message: string - users: array[object] - PUT - Param\u00e8tre Header: - token: string - mac_address: string - Param\u00e8tre: - uuid_user: string - ?username: string - ?email: string - ?password: string - ?role: boolean - ?is_verified: boolean - Retour: - status: string - message: string - DELETE - Param\u00e8tre Header: - token: string - mac_address: string - Param\u00e8tre: - uuid_user: string - Retour: - status: string - message: string - /PasDeNom/admin/report (Report) - GET - Param\u00e8tre Header: - token: string - mac_address: string - Param\u00e8tre: - ?uuid_user: string - Retour: - status: string - message: string - reports: array[object] - DELETE - Param\u00e8tre Header: - token: string - Param\u00e8tre: - uuid_user: string - reason: string - Retour: - status: string - message: string - reports: array[object] - /PasDeNom/admin/user/logo (Logo user) - GET - Param\u00e8tre Header: - token: string - mac_address: string - Param\u00e8tre: - uuid_user: string - Retour: - status: string - message: string - logo: array[object] - PUT - Param\u00e8tre Header: - token: string - mac_address: string - Param\u00e8tre: - uuid_user: string - user_log_uuid: string - ?seed: string - ?path: string - ?active: boolean - Retour: - status: string - message: string - /PasDeNom/admin/user-ip (User ip) - GET - Param\u00e8tre Header: - token: string - mac_address: string - Param\u00e8tre: - ?uuid_user: string - Retour: - status: string - message: string - user_ip: array[object] - /PasDeNom/admin/user-macadress (User macadress) - GET - Param\u00e8tre Header: - token: string - mac_address: string - Param\u00e8tre: - ?uuid_user: string - Retour: - status: string - message: string - user_macadress: array[object] - /PasDeNom/admin/user-friend (User friend) - GET - Param\u00e8tre Header: - token: string - mac_address: string - Param\u00e8tre: - ?uuid_user: string - Retour: - status: string - message: string - user_friend: array[object] - /PasDeNom/admin/user-device (User device) - GET - Param\u00e8tre Header: - token: string - mac_address: string - Param\u00e8tre: - ?uuid_user: string - Retour: - status: string - message: string - user_device: array[object] - /PasDeNom/admin/user-history (User history) - GET - Param\u00e8tre Header: - token: string - mac_address: string - Param\u00e8tre: - ?uuid_user: string - Retour: - status: string - message: string - user_history: array[object] - /PasDeNom/admin/user-history-message (User history message) - GET - Param\u00e8tre Header: - token: string - mac_address: string - Param\u00e8tre: - user_history_uuid: string - Retour: - status: string - message: string - user_history_message: array[object] - /PasDeNom/admin/user-history-action (User history action) - GET - Param\u00e8tre Header: - token: string - mac_address: string - Param\u00e8tre: - user_history_uuid: string - Retour: - status: string - message: string - user_history_action: array[object]","title":"API"},{"location":"dev/CleanerDatabase/cleanerDatabase/","text":"Cleaner Database \u00b6 Pr\u00e9sentation de Cleaner Database Cleaner Database est un outil de nettoyage de la base de donn\u00e9es qui tournera en arri\u00e8re plan et lanc\u00e9 par un cron. Il permet de transf\u00e9rer les vieilles donn\u00e9es dans un autre endroit pour les archiver, et les supprime de la base de donn\u00e9es. Choix du langage Le langage n'est pas encore d\u00e9fini.","title":"Cleaner Database"},{"location":"dev/CleanerDatabase/cleanerDatabase/#cleaner-database","text":"Pr\u00e9sentation de Cleaner Database Cleaner Database est un outil de nettoyage de la base de donn\u00e9es qui tournera en arri\u00e8re plan et lanc\u00e9 par un cron. Il permet de transf\u00e9rer les vieilles donn\u00e9es dans un autre endroit pour les archiver, et les supprime de la base de donn\u00e9es. Choix du langage Le langage n'est pas encore d\u00e9fini.","title":"Cleaner Database"},{"location":"dev/Compress%26encrypt/compress%26Encrypt/","text":"Compress & Encrypt \u00b6 Pr\u00e9sentation de compress & encrypt Compress et encrypt est une librairie dynamique, en language //TODO. Cette librairie permet de r\u00e9cup\u00e9rer un fichier, d'effectuer une compression sans perte et ensuite de le d\u00e9couper en bloc et chiffrer chaque bloc. Le but est de gagner de l'espace de stockage ainsi que de s\u00e9curiser les fichiers. La librairie sera ensuite import\u00e9e comme module NodeJs. Choix du langage Le langage de cette librairies est le C . Function de la librairie La librairie compress & encrypt sera compos\u00e9e de deux fonctions principales : compressAndEncrypt decryptAndDecompress Cette fonction permet de r\u00e9cuperer en param\u00e8tre un fichier et le compresser, d\u00e9couper en bloc et chiffrer chaque bloc. Argument Type Description filePath char * correspond \u00e0 un fichier entrant uuid char * correspond \u00e0 l'identifient du fichier qui sera ajout\u00e9 en header des blocs Cette fonction permet de reconstituer un fichier g\u00e2ce \u00e0 l'uuid et au seed. Argument Type Description dirPath char * correspond au chemin du dossier des blocs seed char * correspond \u00e0 la graine de reconstitution de la s\u00e9quence uuid char * correspond \u00e0 l'identifient du fichier","title":"Compress & Encrypt"},{"location":"dev/Compress%26encrypt/compress%26Encrypt/#compress-encrypt","text":"Pr\u00e9sentation de compress & encrypt Compress et encrypt est une librairie dynamique, en language //TODO. Cette librairie permet de r\u00e9cup\u00e9rer un fichier, d'effectuer une compression sans perte et ensuite de le d\u00e9couper en bloc et chiffrer chaque bloc. Le but est de gagner de l'espace de stockage ainsi que de s\u00e9curiser les fichiers. La librairie sera ensuite import\u00e9e comme module NodeJs. Choix du langage Le langage de cette librairies est le C . Function de la librairie La librairie compress & encrypt sera compos\u00e9e de deux fonctions principales : compressAndEncrypt decryptAndDecompress Cette fonction permet de r\u00e9cuperer en param\u00e8tre un fichier et le compresser, d\u00e9couper en bloc et chiffrer chaque bloc. Argument Type Description filePath char * correspond \u00e0 un fichier entrant uuid char * correspond \u00e0 l'identifient du fichier qui sera ajout\u00e9 en header des blocs Cette fonction permet de reconstituer un fichier g\u00e2ce \u00e0 l'uuid et au seed. Argument Type Description dirPath char * correspond au chemin du dossier des blocs seed char * correspond \u00e0 la graine de reconstitution de la s\u00e9quence uuid char * correspond \u00e0 l'identifient du fichier","title":"Compress &amp; Encrypt"},{"location":"dev/Database/database/","text":"Base de donn\u00e9e \u00b6 Diagramme de la base de donn\u00e9e (MySql / MariaDB) information Ce diagramme montre la structure basique de la base de donn\u00e9e. La base de donn\u00e9e est compos\u00e9e de plusieurs tables : USER : Les utilisateurs USER_REPORT : Les rapports des utilisateurs sur une personne s'\u00e9tant mal comport\u00e9e. USER_LOGO : Les logos des utilisateurs USER_IP : Les adresses IP des utilisateurs USER_MACADDRESS : Les adresses MAC des utilisateurs USER_FRIEND : Les amis des utilisateurs USER_DEVICE : Les appareils utilis\u00e9s par les utilisateurs USER_HISTORY : Les historiques des utilisateurs USER_MESSAGE : Les messages des utilisateurs USER_ACTION : Les actions des utilisateurs ROOM : Les salons ROOM_USER : Les utilisateurs dans les salons ROOM_MESSAGE : Les messages dans les salons ROOM_ACTION : Les actions dans les salons ROOM_MESSAGE_FILE : Les fichiers dans les salons ROOM_HAS_TAG : Les tags dans les salons ROOM_HAS_CATEGORIE : Les cat\u00e9gories dans les salons TAG : Les tags CATEGORIE : Les cat\u00e9gories","title":"Base de donn\u00e9e"},{"location":"dev/Database/database/#base-de-donnee","text":"Diagramme de la base de donn\u00e9e (MySql / MariaDB) information Ce diagramme montre la structure basique de la base de donn\u00e9e. La base de donn\u00e9e est compos\u00e9e de plusieurs tables : USER : Les utilisateurs USER_REPORT : Les rapports des utilisateurs sur une personne s'\u00e9tant mal comport\u00e9e. USER_LOGO : Les logos des utilisateurs USER_IP : Les adresses IP des utilisateurs USER_MACADDRESS : Les adresses MAC des utilisateurs USER_FRIEND : Les amis des utilisateurs USER_DEVICE : Les appareils utilis\u00e9s par les utilisateurs USER_HISTORY : Les historiques des utilisateurs USER_MESSAGE : Les messages des utilisateurs USER_ACTION : Les actions des utilisateurs ROOM : Les salons ROOM_USER : Les utilisateurs dans les salons ROOM_MESSAGE : Les messages dans les salons ROOM_ACTION : Les actions dans les salons ROOM_MESSAGE_FILE : Les fichiers dans les salons ROOM_HAS_TAG : Les tags dans les salons ROOM_HAS_CATEGORIE : Les cat\u00e9gories dans les salons TAG : Les tags CATEGORIE : Les cat\u00e9gories","title":"Base de donn\u00e9e"},{"location":"dev/Front/front/","text":"Definition Front Le front permet de fournir une interface graphique \u00e0 l'utilisateur. React React est une biblioth\u00e8que JavaScript libre d\u00e9velopp\u00e9e par Facebook depuis 2013. Le but principal de cette biblioth\u00e8que est de faciliter la cr\u00e9ation d'application web monopage, via la cr\u00e9ation de composants d\u00e9pendant d'un \u00e9tat et g\u00e9n\u00e9rant une page HTML \u00e0 chaque changement d'\u00e9tat. Elle est plus l\u00e9g\u00e8re et ultra modulable. Cette particulajrit\u00e9 est tr\u00e8s appr\u00e9ci\u00e9e de la communaut\u00e9 et on retrouve cette philosophie un peu partout dans l'\u00e9cosyst\u00e8me JavaScript, notament avec le tr\u00e8s c\u00e9l\u00e8bre Nodejs.","title":"Front"},{"location":"dev/GeoTracerIp/geoTracerIp/","text":"Geo Tracer Ip \u00b6 Choix du langage Le langage n'est pas encore d\u00e9fini. Pr\u00e9sentation de geoTracerIp GeoTracerIp est un outil de tra\u00e7age de la g\u00e9olocalisation d'un utilisateur, gr\u00e2ce \u00e0 son ip et qui tournera en arri\u00e8re plan et lanc\u00e9 par un cron. Il permettra d'avoir des statistiques de la provenance des visiteurs.","title":"GeoTracerIp"},{"location":"dev/GeoTracerIp/geoTracerIp/#geo-tracer-ip","text":"Choix du langage Le langage n'est pas encore d\u00e9fini. Pr\u00e9sentation de geoTracerIp GeoTracerIp est un outil de tra\u00e7age de la g\u00e9olocalisation d'un utilisateur, gr\u00e2ce \u00e0 son ip et qui tournera en arri\u00e8re plan et lanc\u00e9 par un cron. Il permettra d'avoir des statistiques de la provenance des visiteurs.","title":"Geo Tracer Ip"}]}